

@{
    ViewData["Title"] = "Register";
    
}

<h1>@ViewData["Title"]</h1>
<!--
 <form asp-action="Register" method="post">
     <div class="row">
         <div class="col-md-6">
             <div class="form-group">
                 <label for="FirstName">First Name:</label>
                 <input type="text" class="form-control" id="FirstName" name="FirstName" required>
             </div>

             <div class="form-group">
                 <label for="Email">Email:</label>
                 <input type="email" class="form-control" id="Email" name="Email" required>
             </div>

             <div class="form-group">
                 <label for="StreetAddress">Street Address:</label>
                 <input type="text" class="form-control" id="StreetAddress" name="StreetAddress" required>
             </div>

             <div class="form-group">
                 <label for="City">City:</label>
                 <input type="text" class="form-control" id="City" name="City" required>
             </div>

             <div class="form-group">
                 <label for="State">State:</label>
                 <input type="text" class="form-control" id="State" name="State" required>
             </div>

             <div class="form-group">
                 <label for="PostalCode">Postal Code:</label>
                 <input type="text" class="form-control" id="PostalCode" name="PostalCode" required>
             </div>
         </div>

         <div class="col-md-6">
             <div class="form-group">
                 <label for="LastName">Last Name:</label>
                 <input type="text" class="form-control" id="LastName" name="LastName" required>
             </div>

             <div class="form-group">
                 <label for="PhoneNumber">Phone Number:</label>
                 <input type="tel" class="form-control" id="PhoneNumber" name="PhoneNumber" required>
             </div>

             <div class="form-group">
                 <label for="Username">Username:</label>
                 <input type="text" class="form-control" id="Username" name="Username" required>
             </div>

             <div class="form-group">
                 <label for="Password">Password:</label>
                 <input type="password" class="form-control" id="Password" name="Password" required>
             </div>

             <div class="form-group">
                 <label for="ThemeColor">Theme Color:</label>
                 <input type="color" class="form-control" id="ThemeColor" name="ThemeColor" required>
             </div>

             <div class="form-group">
                 <label>Level of Authorization:</label>
                 <div class="form-check">
                     <input type="checkbox" class="form-check-input" id="EmpathyAdmin" name="AuthorizationLevels" value="Empathy Administrator">
                     <label class="form-check-label" for="EmpathyAdmin">Empathy Administrator</label>
                 </div>
                 <div class="form-check">
                     <input type="checkbox" class="form-check-input" id="OrgAdmin" name="AuthorizationLevels" value="Organization Administrator">
                     <label class="form-check-label" for="OrgAdmin">Organization Administrator</label>
                 </div>
             </div>
         </div>
     </div>
     <button type="submit" class="btn btn-primary">Register</button>
 </form>
 -->
 @model EmpathyKick.Models.User

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Account</h4>
        <hr />
        @Html.ValidationSummary(true)
        @if (ViewBag.Message != null)
        {
            <div class="form-group">
                <div class="col-md-10">@ViewBag.Message</div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Username, new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Username, new { @required = "required" })
                @Html.ValidationMessageFor(model => model.Username)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { @required = "required" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { @required = "required" })
                @Html.ValidationMessageFor(model => model.FirstName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { @required = "required" })
                @Html.ValidationMessageFor(model => model.LastName)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { @required = "required" })
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { @required = "required" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-primary" id="submitBtn" disabled />
            </div>
        </div>
    </div>
    <style>
        #submitBtn:disabled {
            background-color: #dddddd; /* Change this to the desired grey color */
            
        }
    </style>
}



@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            // Trigger form submission to initiate validation
            $('form').submit();

            // Enable/disable submit button based on form validity
            updateSubmitButtonState();

            $('form').change(function () {
                updateSubmitButtonState();
            });

            function updateSubmitButtonState() {
                var isValid = true;

                var emailErrorSpan = document.getElementById('Email-error');
                var emailBad = false;

                // Check if the element exists
                if (emailErrorSpan !== null) {
                    // The span element with id 'Email-error' exists
                    console.log('The span element exists.');
                    emailBad = true;
                    console.log(emailBad);
                } else {
                    // The span element with id 'Email-error' does not exist
                    console.log('The span element does not exist.');
                    console.log(emailBad);
                }

                $('form input').each(function () {
                    if ($(this).val() === '') {
                        isValid = false;
                        return false; // break out of the each loop
                    } else if (emailBad) {
                        isValid = false;
                        return false;
                    }
                });

                $('#submitBtn').prop('disabled', !isValid);
            }
        });
    </script>
}


